// <auto-generated />
using System;
using DOTNET_6.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOTNET_6.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DOTNET_6.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Л.Н.Толстой",
                            Description = "Роман-эпопея русской литературы жанра классика",
                            ImageUrl = "https://cdn.ast.ru/v2/ASE000000000710286/COVER/cover1__w340.jpg",
                            IsBooked = false,
                            Name = "Война и Мир",
                            PublishDate = new DateTime(1865, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Ф.М.Достоевский",
                            Description = "Классический роман русской литературы",
                            ImageUrl = "https://img4.labirint.ru/rc/2691547166676f499a9b8d1f2fd81508/363x561q80/books86/853526/cover.jpg?1649679998",
                            IsBooked = false,
                            Name = "Идиот",
                            PublishDate = new DateTime(1876, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "Артур Хейли",
                            Description = "Удивительная история",
                            ImageUrl = "https://ra-product-image.s3.eu-north-1.amazonaws.com/b9/c1/b9c13250c56c7499e9c1adf2bd503e04_main_1.jpg",
                            IsBooked = false,
                            Name = "Аэропорт",
                            PublishDate = new DateTime(1978, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "Ги де Мопассан",
                            Description = "История любви французская классика",
                            ImageUrl = "https://irecommend.ru/sites/default/files/product-images/29033/7.jpg",
                            IsBooked = false,
                            Name = "Милый друг",
                            PublishDate = new DateTime(1885, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AuthorName = "Ильф и Петров",
                            Description = "Комедийное произведение",
                            ImageUrl = "https://s3.vcdn.biz/static/f/818726421/image.jpg/pt/r300x423x4",
                            IsBooked = false,
                            Name = "12 стульев",
                            PublishDate = new DateTime(1924, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AuthorName = "М.А.Булгаков",
                            Description = "Удивительный мистический роман",
                            ImageUrl = "https://img3.labirint.ru/rc/1927058a57537edd854803f93079075d/363x561q80/books67/668307/cover.jpg?1618673120",
                            IsBooked = false,
                            Name = "Мастер и Маргарита",
                            PublishDate = new DateTime(1940, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AuthorName = "Rene Goscinny",
                            Description = "Веселые истории о забавном Николя",
                            ImageUrl = "https://m.media-amazon.com/images/I/51BdA9Ir0FL.jpg",
                            IsBooked = false,
                            Name = "Petit Nicolas",
                            PublishDate = new DateTime(1962, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DOTNET_6.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
